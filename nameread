#! /bin/sh

# designed by Nobuaki Tounaka
# written by richmikan

# print the usage and exit
print_usage_and_exit () {
  cat <<-__USAGE 1>&2
	Usage   : ${0##*/} [-el] [-s<c>] [-n<string>] <name> <name_file>
	Version : 2017-01-31 14:20:40 JST
	        : Open usp Tukubai (POSIX.1 Bourne Shell/POSIX.1 commands)
__USAGE
  exit 1
}

# initialize
set -u
umask 0022
export LC_ALL=C
export PATH="$(command -p getconf PATH):${PATH:-}"
sopt=''
sopt_is_set=0
nopt=''
eopt_is_set=0
lopt_is_set=0
name=''
name_file=''
TAB=$(printf '\t')

# parse arguments
[ $# -ge 1 ] || print_usage_and_exit
optmode=''
i=0
for arg in "$@"; do
  i=$((i+1))
  if [ -z "$optmode" ]; then
    case "$arg" in
      -[elnsdi]*)
        ret=$(echo "_${arg#-}" |
              awk '{
                e = "_";
                l = "_";
                n = "_";
                s = "_";
                opt_str = "";
                for (i=2;i<=length($0);i++) {
                  c = substr($0,i,1);
                  if         (c == "e")                {
                    e = "e";
                  } else if  (c == "l")                {
                    l = "l";
                  } else if ((c == "n") || (c == "i")) {
                    n = "n";
                    opt_str = substr($0,i+1);
                    break;
                  } else if ((c == "s") || (c == "d")) {
                    s = "s";
                    opt_str = substr($0,i+1);
                    break;
                  }
                }
                printf("%s%s%s%s %s",e,l,n,s,opt_str);
              }')
        ret1=${ret%% *}
        ret2=${ret#* }
        case "$ret1" in *e*) eopt_is_set=1;; esac
        case "$ret1" in *l*) lopt_is_set=1;; esac
        case "$ret1" in *n*) case "$ret2" in
                               '') optmode='n';;
                                *) nopt=$ret2 ;;
                             esac
                             ;;
        esac
        case "$ret1" in *s*) sopt=$ret2
                             sopt_is_set=1
                             ;;
        esac
        ;;
      *)
        if [ -z "$name" ]; then
          [ $i -ge $(($#-1)) ] || print_usage_and_exit
          name=$arg
        elif [ -z "$name_file" ]; then
          [ $i -eq $# ] || print_usage_and_exit
          name_file=$arg
        else
          print_usage_and_exit
        fi
        ;;
    esac
  elif [ "$optmode" = 'n' ]; then
    nopt=$arg
    optmode=''
  else
    print_usage_and_exit
  fi
done
case "$name" in '') print_usage_and_exit;; esac
if [ -z "$name_file" ]; then
  name_file='-'
elif [ ! -f "$name_file"     ] &&
     [ ! -c "$name_file"     ] &&
     [ ! -p "$name_file"     ] &&
     [ "_$name_file" != '_-' ]
then
  print_usage_and_exit
fi
if [ ! -r "$name_file" ] && [ "_$name_file" != '_-' ]; then
  printf '%s: Cannot open the file\n' "${0##*/}" 1>&2
  exit 1
fi
case "$name_file" in ''|-|/*|./*|../*) :;; *) file="./$name_file";; esac

#
awk_code='
BEGIN {
  eopt_is_set = ENVIRON["eopt_is_set"];
  lopt_is_set = ENVIRON["lopt_is_set"];
  nopt        = ENVIRON["nopt"       ];
  sopt        = ENVIRON["sopt"       ];
  sopt_is_set = ENVIRON["sopt_is_set"];
  target_name = ENVIRON["name"       ];
}
{
  i = index($0," ");
  name = (i > 1) ? $1 : (length($0)>0) ? $0 : "";
  if (eopt_is_set == 0 && name != target_name) {
    next;
  }
  var = (i > 0) ? substr($0,i+1) : "";
  if (length(var) == 0 && length(nopt)) {
    var = nopt;
  } else if (sopt_is_set != 0)  {
    s = "";
    while (match(var,/ /)) {
      s = s substr(var, 1, RSTART-1) sopt;
      var = substr(var, RSTART+1);
    }
    var = s var;
  }
  if (lopt_is_set) {
    print name, var;
  } else {
    print var;
  }
}
'
case $eopt_is_set in
  0) export   eopt_is_set   lopt_is_set   nopt   sopt sopt_is_set   name
     exec awk "$awk_code" "$name_file"
     ;;
  *) case "${name#^}" in "$name") name="[^$TAB ]*${name}";;
                               *) name="${name#^}"       ;;
     esac
     case "${name#$}" in "$name") name="${name}[^$TAB ]*";;
                               *) name="${name%$}"       ;;
     esac
     export   eopt_is_set   lopt_is_set   nopt   sopt sopt_is_set   name
     grep -E "^${name}([$TAB ]+.*|)\$" "$name_file" |
     exec awk "$awk_code"
     ;;
esac
